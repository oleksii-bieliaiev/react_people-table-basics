{"version":3,"sources":["components/PageNavLink.tsx","components/MainNav.tsx","components/HomePage.tsx","components/Loader/Loader.tsx","components/PersonLink.tsx","components/PeopleList.tsx","api.ts","components/PeoplePage.tsx","components/PageNotFound.tsx","App.tsx","index.tsx"],"names":["PageNavLink","to","text","className","isActive","classNames","MainNav","role","HomePage","Loader","PersonLink","slug","name","sex","PeopleList","listOfPeople","useParams","selectedSlug","list","map","personage","mother","find","she","motherName","father","he","fatherName","person","born","died","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","PeoplePage","useState","isLoading","setIsLoading","isError","setIsError","setListOfPeople","loadPeopleList","data","useEffect","length","PageNotFound","App","path","element","replace","index","createRoot","document","getElementById","render"],"mappings":"mQAQaA,EAA+B,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,GAAIC,EAAW,EAAXA,KACjD,OACE,cAAC,IAAD,CACED,GAAIA,EACJE,UAAW,gBAAGC,EAAH,EAAGA,SAAH,OAAkBC,IAC3B,cAAe,CACb,8BAA+BD,GAFxB,EAFb,SAQGF,GAGN,ECnBYI,EAAoB,kBAC/B,qBACE,UAAQ,MACRH,UAAU,iCACVI,KAAK,aACL,aAAW,kBAJb,SAME,qBAAKJ,UAAU,YAAf,SACE,sBAAKA,UAAU,eAAf,UACE,cAAC,EAAD,CACEF,GAAG,IACHC,KAAK,SAGP,cAAC,EAAD,CACED,GAAG,UACHC,KAAK,iBAhBkB,ECFpBM,EAAW,kBACtB,oBAAIL,UAAU,QAAd,sBADsB,E,6BCEXM,G,MAAS,kBACpB,qBAAKN,UAAU,SAAS,UAAQ,SAAhC,SACE,qBAAKA,UAAU,qBAFG,G,OCOTO,EAA8B,SAAC,GAIrC,IAHLC,EAGI,EAHJA,KACAC,EAEI,EAFJA,KACAC,EACI,EADJA,IAEA,OACE,cAAC,IAAD,CACEZ,GAAE,kBAAaU,GACfR,UAAWE,IACT,CACE,kBAA2B,MAARQ,IAJzB,SAQGD,GAGN,ECjBYE,EAA8B,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aAC5C,EAA6BC,cAArBC,oBAAR,MAAuB,EAAvB,EAEMC,EAAOH,EAAaI,KAAI,SAAAC,GAC5B,IAAMC,EAASN,EAAaO,MAAK,SAAAC,GAAG,OAAIA,EAAIX,OAASQ,EAAUI,UAA3B,IAC9BC,EAASV,EAAaO,MAAK,SAAAI,GAAE,OAAIA,EAAGd,OAASQ,EAAUO,UAA1B,IAEnC,OAAO,2BACFP,GADL,IAEEC,SACAI,UAEH,IAED,OACE,gCACGP,EAAKC,KAAI,SAAAS,GACR,IACEhB,EASEgB,EATFhB,KACAC,EAQEe,EARFf,IACAgB,EAOED,EAPFC,KACAC,EAMEF,EANFE,KACAH,EAKEC,EALFD,WACAH,EAIEI,EAJFJ,WACAH,EAGEO,EAHFP,OACAI,EAEEG,EAFFH,OACAd,EACEiB,EADFjB,KAGF,OACE,qBACE,UAAQ,SAERR,UAAWE,IACT,CACE,yBAA0BM,IAASM,IALzC,UASE,6BACE,cAAC,EAAD,CACEN,KAAMA,EACNC,KAAMA,EACNC,IAAKA,MAIT,6BAAKA,IACL,6BAAKgB,IACL,6BAAKC,IACL,6BACGT,EAEG,cAAC,EAAD,CACEV,KAAMU,EAAOV,KACbC,KAAMS,EAAOT,KACbC,IAAKQ,EAAOR,MAGbW,GAAc,MAErB,6BACGC,EAEG,cAAC,EAAD,CACEd,KAAMc,EAAOd,KACbC,KAAMa,EAAOb,KACbC,IAAKY,EAAOZ,MAGbc,GAAc,QAtChBhB,EA0CV,KAIN,EC9EM,SAASoB,IAEd,OANYC,EAMA,IALL,IAAIC,SAAQ,SAAAC,GAAO,OAAIC,WAAWD,EAASF,EAAxB,KAMvBI,MAAK,kBAAMC,MATA,oEASN,IACLD,MAAK,SAAAE,GAAQ,OAAIA,EAASC,MAAb,IARlB,IAAcP,CASb,CCRM,IAAMQ,EAAa,WACxB,MAAkCC,oBAAS,GAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA8BF,oBAAS,GAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAAwCJ,mBAAmB,IAA3D,mBAAO1B,EAAP,KAAqB+B,EAArB,KAEMC,EAAc,iDAAG,qGACrBJ,GAAa,GADQ,kBAIAZ,IAJA,OAIbiB,EAJa,OAMnBF,EAAgBE,GAChBH,GAAW,GAPQ,gDASnBA,GAAW,GATQ,QAYrBF,GAAa,GAZQ,yDAAH,qDAmBpB,OAJAM,qBAAU,WACRF,GACD,GAAE,IAGD,qCACE,oBAAI5C,UAAU,QAAd,yBACA,qBAAKA,UAAU,QAAf,SACE,sBAAKA,UAAU,sBAAf,UACGuC,GAAa,cAAC,EAAD,IAEbE,GACC,mBAAG,UAAQ,qBAAqBzC,UAAU,kBAA1C,mCAKAY,EAAamC,SAAWR,GACxB,mBAAG,UAAQ,kBAAX,+CAKD3B,EAAamC,OAAS,IAAMR,IAAcE,GACzC,wBACE,UAAQ,cACRzC,UAAU,uDAFZ,UAIE,gCACE,+BACE,sCACA,qCACA,sCACA,sCACA,wCACA,6CAIJ,cAAC,EAAD,CAAYY,aAAcA,cAOvC,ECxEYoC,EAAe,kBAC1B,oBAAIhD,UAAU,QAAd,2BAD0B,ECOfiD,EAAM,kBACjB,sBAAK,UAAQ,MAAb,UACE,cAAC,EAAD,IAEA,sBAAMjD,UAAU,UAAhB,SACE,qBAAKA,UAAU,YAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOkD,KAAK,IAAIC,QAAS,cAAC,EAAD,MACzB,cAAC,IAAD,CAAOD,KAAK,OAAOC,QAAS,cAAC,IAAD,CAAUrD,GAAG,IAAIsD,SAAO,MACpD,eAAC,IAAD,CAAOF,KAAK,SAAZ,UACE,cAAC,IAAD,CAAOG,OAAK,EAACF,QAAS,cAAC,EAAD,MACtB,cAAC,IAAD,CAAOD,KAAK,gBAAgBC,QAAS,cAAC,EAAD,SAEvC,cAAC,IAAD,CACED,KAAK,IACLC,QAAS,cAAC,EAAD,eAfF,ECCnBG,qBAAWC,SAASC,eAAe,SAChCC,OACC,cAAC,IAAD,UACE,cAAC,EAAD,M","file":"static/js/main.3a9be5b4.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\ntype Props = {\n  to: string,\n  text: string,\n};\n\nexport const PageNavLink: React.FC<Props> = ({ to, text }) => {\n  return (\n    <NavLink\n      to={to}\n      className={({ isActive }) => classNames(\n        'navbar-item', {\n          'has-background-grey-lighter': isActive,\n        },\n      )}\n    >\n      {text}\n    </NavLink>\n  );\n};\n","import { PageNavLink } from './PageNavLink';\n\nexport const MainNav: React.FC = () => (\n  <nav\n    data-cy=\"nav\"\n    className=\"navbar is-fixed-top has-shadow\"\n    role=\"navigation\"\n    aria-label=\"main navigation\"\n  >\n    <div className=\"container\">\n      <div className=\"navbar-brand\">\n        <PageNavLink\n          to=\"/\"\n          text=\"Home\"\n        />\n\n        <PageNavLink\n          to=\"/people\"\n          text=\"People\"\n        />\n      </div>\n    </div>\n  </nav>\n\n);\n","export const HomePage = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Link } from 'react-router-dom';\nimport classNames from 'classnames';\n\ntype Props = {\n  slug: string;\n  name: string;\n  sex: string;\n};\n\nexport const PersonLink: React.FC<Props> = ({\n  slug,\n  name,\n  sex,\n}) => {\n  return (\n    <Link\n      to={`/people/${slug}`}\n      className={classNames(\n        {\n          'has-text-danger': sex === 'f',\n        },\n      )}\n    >\n      {name}\n    </Link>\n  );\n};\n","import { useParams } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Person } from '../types';\nimport { PersonLink } from './PersonLink';\n\ntype Props = {\n  listOfPeople: Person[];\n};\n\nexport const PeopleList: React.FC<Props> = ({ listOfPeople }) => {\n  const { selectedSlug = 0 } = useParams();\n\n  const list = listOfPeople.map(personage => {\n    const mother = listOfPeople.find(she => she.name === personage.motherName);\n    const father = listOfPeople.find(he => he.name === personage.fatherName);\n\n    return {\n      ...personage,\n      mother,\n      father,\n    };\n  });\n\n  return (\n    <tbody>\n      {list.map(person => {\n        const {\n          name,\n          sex,\n          born,\n          died,\n          fatherName,\n          motherName,\n          mother,\n          father,\n          slug,\n        } = person;\n\n        return (\n          <tr\n            data-cy=\"person\"\n            key={slug}\n            className={classNames(\n              {\n                'has-background-warning': slug === selectedSlug,\n              },\n            )}\n          >\n            <td>\n              <PersonLink\n                slug={slug}\n                name={name}\n                sex={sex}\n              />\n            </td>\n\n            <td>{sex}</td>\n            <td>{born}</td>\n            <td>{died}</td>\n            <td>\n              {mother\n                ? (\n                  <PersonLink\n                    slug={mother.slug}\n                    name={mother.name}\n                    sex={mother.sex}\n                  />\n                )\n                : (motherName || '-')}\n            </td>\n            <td>\n              {father\n                ? (\n                  <PersonLink\n                    slug={father.slug}\n                    name={father.name}\n                    sex={father.sex}\n                  />\n                )\n                : (fatherName || '-')}\n            </td>\n          </tr>\n        );\n      })}\n\n    </tbody>\n  );\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import { useEffect, useState } from 'react';\nimport { Loader } from './Loader';\nimport { Person } from '../types';\nimport { PeopleList } from './PeopleList';\nimport { getPeople } from '../api';\n\nexport const PeoplePage = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState(false);\n  const [listOfPeople, setListOfPeople] = useState<Person[]>([]);\n\n  const loadPeopleList = async () => {\n    setIsLoading(true);\n\n    try {\n      const data = await getPeople();\n\n      setListOfPeople(data);\n      setIsError(false);\n    } catch {\n      setIsError(true);\n    }\n\n    setIsLoading(false);\n  };\n\n  useEffect(() => {\n    loadPeopleList();\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading && <Loader />}\n\n          {isError && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n\n          {!listOfPeople.length && !isLoading && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n\n          {listOfPeople.length > 0 && !isLoading && !isError && (\n            <table\n              data-cy=\"peopleTable\"\n              className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n            >\n              <thead>\n                <tr>\n                  <th>Name</th>\n                  <th>Sex</th>\n                  <th>Born</th>\n                  <th>Died</th>\n                  <th>Mother</th>\n                  <th>Father</th>\n                </tr>\n              </thead>\n\n              <PeopleList listOfPeople={listOfPeople} />\n            </table>\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n","export const PageNotFound = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import './App.scss';\nimport { Navigate, Route, Routes } from 'react-router-dom';\nimport { MainNav } from './components/MainNav';\nimport { HomePage } from './components/HomePage';\nimport { PeoplePage } from './components/PeoplePage';\nimport { PageNotFound } from './components/PageNotFound';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <MainNav />\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route path=\"/\" element={<HomePage />} />\n          <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n          <Route path=\"people\">\n            <Route index element={<PeoplePage />} />\n            <Route path=\":selectedSlug\" element={<PeoplePage />} />\n          </Route>\n          <Route\n            path=\"*\"\n            element={<PageNotFound />}\n          />\n        </Routes>\n      </div>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}